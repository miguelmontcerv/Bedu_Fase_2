3+54
install.packages("dplyr")
library(dplyr)
?mutate
print("Hola mundo DS en R")
sqrt(x=121)
x
print(x)
sqrt(121)
circuits <- read.csv("C:/ESCOMc/Formula1_datasets/circuits.csv")
View(circuits)
is.integer(25)
is.integer(25L)
is.integer(25l)
is.integer(L)
is.integer("l")
typeof("L")
typeof(23)
typeof(23.1)
typeof(23L)
mmax()?
sa
max
max(1,2)
max(sqrt(121),12,34)
print("Mundo")
print("Mundo")
print("Hola")
print("Mundo")
print(resultado)
resultado <- 3 +2131
print(resultado)
install.packages(“ggplot2”)
install.packages("ggplot2")
install.packages("dplyr")
install.packages("dplyr")
operacion.personalizada <- function(a,b,c){ paso.1 <- (a+b)*4 + 2*a
paso.2 <- paso.1*2 + c/2 paso.3 <- paso.2*3 return(paso.3)
}
saludo <- function(nombre){ mensaje <- paste(“Hola”, nombre) return(mensaje)
}
# Reto 1
# leyendo el fichero desde el repositorio
netflix <-read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
# dimensión del data frame
dim(netflix)
class(netflix)
# titulos que se estrenaron despues del 2015
(net.2015 <- netflix[netflix$release_year > 2015, ])
# escritura del archivo
write.csv(net.2015, "res.netflix.csv")
View(net.2015)
(net.2015 <- netflix[netflix$release_year > 2015])
(net.2015 <- netflix[netflix$release_year > 2015, ])
#Reto 2
ran <- rnorm(44)
(ran)
for (i in 1:15) {
el[i] <- (ran[i]^3) + 12
print(el)
}
el <- vector() #Declaramos el vector
for (i in 1:15) {
el[i] <- (ran[i]^3) + 12
print(el)
}
for (i in 1:15) {
el[i] <- (ran[i]^3) + 12
print(el[i])
}
(ran)
for (i in 1:15) {
el[i] <- (ran[i]^3) + 12
print(el[i])
}
df <- data.frame(ran = ran[1:15],val = el)
df.al
(df)
df <- data.frame(rango = ran[1:15],valor = el)
(df)
(df.al)
amazon.best <- read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/bestsellers%20with%20categories.csv")
amazon.best <- read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/bestsellers%20with%20categories.csv")
# Convirtiendo el DF a transpuesto y en un data frame
tAmazon <- as.data.frame(t(amazon.best))
# Usando el nombre de los libros como el nombre de las columnas
colnames(tAmazon) <- tAmazon[1,]
row.names(tAmazon)
# libro con mayor precio
which.max(tAmazon["Price",])
# libro con mayor precio
which.max(tAmazon["Price",])
# libro con menor precio
which.min(tAmazon["Price",])
#Reto 2
ran <- rnorm(44)
(ran)
#Postwork 1
table <- read.csv("https://www.football-data.co.uk/spainm.php")
#Postwork 1
table <- read.csv("https://www.football-data.co.uk/spainm.php")
df <- as.data.frame(table)
View(df)
#Postwork 1
table <- read.csv("sp1.csv")
#Postwork 1
table <- read.csv("c:/escomc/sp1.csv")
df <- as.data.frame(table)
View(df)
?table
casa <- df$FTHG
(casa)
visitante <- df$FTAG
(visitante)
#En R tenemos diferentes tipos de datos, algunos conocidos, otros no tanto
#Recuerda colocar entre parentesis para hacer plots
(cadena <- "Hola Mundo de R")
(entero <- 23L)
(vector <- c(1,6,7))
#Comandos para vectores
length(vector)
#para agregar elementos a un vector, se utiliza la concatenacion
vector <- c(vector,34)
#para agregar elementos a un vector, se utiliza la concatenacion
(vector <- c(vector,34))
#Ordenamos un vector de forma DECRECIENTE
sort(d, decreasing = T)
#Ordenamos un vector de forma DECRECIENTE
sort(vector, decreasing = T)
#Ordenamos un vector de forma CRECIENTE
sort(vector, decreasing = F)
#Para utilizar una lista de numeros utilizamos n:m, donde se llera de n hasta m, otro función para saltos es:
vector2 <- seq(from = 1, to = 10, by =2)
#En r podemos omitir la declaracion de parametros cuando conocemos las instancias a las que corresponden
(vector2 <- seq(1,100, 3))
#Podemos hacer repeticiones numericas, con el siguiente comando, regresa una lista o vector
rep(5:10, times = 6)
#Podemos hacer repeticiones numericas, con el siguiente comando, regresa una lista o vector
(vector2 <- rep(vector, times = 3))
#Reciclaje, super importante
(c(1, 2) + c(7, 8, 9, 10))
#Matrices
(m <- matrix(1:9, nrow = 3, ncol = 3))
#Para visualizar cada elemento de una matriz, debemos recordar matriz[n,m] n =
(m[1,2])
#Se puede visualizar toda una fila o toda una columna
(m[2,])
(m[,3])
#Se pueden sumar matrices con vectores
#antes hacemos un vector de solo 3 elementos
vector <- c(34,12,64)
(suma.vecmat <- m + vector)
#Se puede voltear la matriz con la traspuesta
(t(m))
#Se puede voltear la matriz con la traspuesta
(m)
(t(m))
#Postwork 2
setwd("c:/Escomc/bedu_fase_2/Sesion 2")
sp2018 <- read.csv("SP18")
sp2018 <- read.csv("SP2018")
dir()
sp2018 <- read.csv("SP2018.csv")
View(sp2018)
sp2019 <- read.csv("SP2019.csv")
sp2020 <- read.csv("SP2020.csv")
#2
str(sp2018)
head(sp2018)
View(sp2018)
summary(sp2018)
str(sp2019)
head(sp2019)
View(sp2019)
summary(sp2019)
str(sp2020)
head(sp2020)
View(sp2020)
summary(sp2020)
library(dplyr)
sp2018 <- select(sp2018,Date,HomeTeam,AwayTeam,FTHG, FTAG, FTR)
sp2018 <- read.csv("SP2018.csv")
sp2018_1 <- select(sp2018,Date,HomeTeam,AwayTeam,FTHG, FTAG, FTR)
sp2019_1 <- lapply(sp2019, select, Date, HomeTeam, AwayTeam, FTHG, FTAG, FTR )
sp2019_1 <- select(sp2019,Date,HomeTeam,AwayTeam,FTHG, FTAG, FTR)
sp2020_1 <- select(sp2020,Date,HomeTeam,AwayTeam,FTHG, FTAG, FTR)
lista <- lapply(dir(), select(Date, HomeTeam, AwayTeam, FTHG, FTAG, FTR))
lista <- list(sp2018,sp2019,sp2020)
listasel <- lapply(lista,select,Date, HomeTeam, AwayTeam, FTHG, FTAG, FTR)
View(listasel)
(listasel)
(lista)
summary(sp2018)
str(sp2018)
str(sp2019)
str(sp2020)
(listasel)
#4
(listasel$Date)
#4
(listasel[2])
#4
listasel <- mutate(listasel, Fecha = as.Date(Date))
#4
listasel <- mutate(listasel, Fecha = as.Date(Date))
#4
listasel <- mutate(listasel, Date = as.Date(Date, "%d/%m/%Y")
#4
listasel <- mutate(listasel, Date = as.Date(Date, "%d/%m/%Y"))
#4
listasel <- mutate(listasel, Date = as.Date(Date, "%d/%m/%Y"))
#4
listasel <- mutate(listasel, Date = as.Date(Date, "%d/%m/%Y"))
#4
datafr <- as.data.frame(listasel)
View(datafr)
#4
datafr <- rbind(sp2018,sp2019,sp2020)
#4
datafr <- rbind(sp2018_1,sp2019_1,sp2020_1)
View(datafr)
datafr <- mutate(datafr, Date = as.Date(Date, "%d/%m/%Y"))
str(datafr)
View(datafr)
(datafr$Date)
(datafr$Date[1])
(datafr$Date[2])
(datafr$Date[1] <- datafr$Date[1] + 2000)
(datafr$Date[1] <- datafr$Date[1] - 2000)
datafr <- mutate(datafr, Date = as.Date(Date, "%d/%m/%y"))
str(datafr)
View(datafr)
setwd("c:/Escomc/bedu_fase_2/Sesion 2")
sp2018 <- read.csv("SP2018.csv")
sp2019 <- read.csv("SP2019.csv")
sp2020 <- read.csv("SP2020.csv")
sp2018_1 <- select(sp2018,Date,HomeTeam,AwayTeam,FTHG, FTAG, FTR)
sp2019_1 <- select(sp2019,Date,HomeTeam,AwayTeam,FTHG, FTAG, FTR)
sp2020_1 <- select(sp2020,Date,HomeTeam,AwayTeam,FTHG, FTAG, FTR)
#4
datafr <- rbind(sp2018_1,sp2019_1,sp2020_1)
datafr <- mutate(datafr, Date = as.Date(Date, "%d/%m/%y"))
str(datafr)
View(datafr)
#Posrwork 3
datafr
#Posrwork 3
#1
Goles_Casa <- table(datafr$FTHG)
(Goles_Casa)
(Goles_Casa/nrow(datafr))
Goles_Casa <- (Goles_Casa/nrow(datafr))
#Posrwork 3
#1
Goles_Casa <- table(datafr$FTHG)
#Posrwork 3
#1
Goles_Casa <- table(datafr$FTHG)/nrow(datafr)
(Goles_Casa)
Goles_Visitante <- table(datafr$FTAG)/nrow(datafr)
(Goles_Visitante)
Goles_Conjunta <-  table(datafr$FTHG, datafr$FTAG)/nrow(datafr)
(Goles_Conjunta)
library(ggplot)
library(ggplot2)
ggplot(Goles_Casa)
ggplot(Goles_Casa)
(Goles_Casa)
ggplot(datafr,aes(datafr$FTHG))
ggplot(datafr,aes(datafr$FTHG,Goles_Casa))
ggplot(datafr,aes(FTHG,Goles_Casa))
ggplot(datafr,aes(FTHG))
barplot(table(datafr$FTHG))
barplot(Goles_Casa)
(Goles_Casa)
str(Goles_Casa)
(Goles_Casa[1])
ggplot(
data = Goles_Casa,
mapping = aes(
x = Goles_Casa
)
) + geom_bar()
ggplot(
data = datafr,
mapping = aes(
x = 0:8,
y = Goles_Casa
)
) + geom_bar()
ggplot(
data = datafr,
mapping = aes(
Goles_Casa
)
) + geom_bar()
ggplot(
data = datafr,
mapping = aes(
FTHG
)
) + geom_bar()
ggplot(
data = datafr,
mapping = aes(
table(FTHG)/nrow(datafr)
)
) + geom_bar()
ggplot(
data = datafr,
mapping = aes(
table(datafr$FTHG)/nrow(datafr)
)
) + geom_bar()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(
data = datafr,
mapping = aes(
FTHG/nrow(datafr)
)
) + geom_bar()
barplot(Goles_Casa)
ggplot(
data = datafr,
mapping = aes(
FTHG/nrow(datafr)
)
) + geom_bar()
barplot(Goles_Casa)
